//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Objects;

namespace RusoCars.Models
{
    public partial class CarsRusoEntities : DbContext
    {
        public CarsRusoEntities()
            : base("name=CarsRusoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Image> Images { get; set; }
        public DbSet<News> News { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<Subcategory> Subcategories { get; set; }
        public DbSet<Subcategories_Images> Subcategories_Images { get; set; }
        public DbSet<Team> Teams { get; set; }
        public DbSet<Certification> Certifications { get; set; }
        public DbSet<Client> Clients { get; set; }
        public DbSet<Pilot> Pilots { get; set; }
        public DbSet<Link> Links { get; set; }
        public DbSet<LinksCategory> LinksCategories { get; set; }
        public DbSet<Service> Services { get; set; }
        public DbSet<Language> Languages { get; set; }
        public DbSet<Text> Texts { get; set; }
    
        public virtual ObjectResult<Image> Image_B(Nullable<int> imageId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Image).Assembly);
    
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("ImageId", imageId) :
                new ObjectParameter("ImageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Image>("Image_B", imageIdParameter);
        }
    
        public virtual ObjectResult<Image> Image_B(Nullable<int> imageId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Image).Assembly);
    
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("ImageId", imageId) :
                new ObjectParameter("ImageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Image>("Image_B", mergeOption, imageIdParameter);
        }
    
        public virtual ObjectResult<News> News_B(Nullable<int> newsId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(News).Assembly);
    
            var newsIdParameter = newsId.HasValue ?
                new ObjectParameter("NewsId", newsId) :
                new ObjectParameter("NewsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<News>("News_B", newsIdParameter);
        }
    
        public virtual ObjectResult<News> News_B(Nullable<int> newsId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(News).Assembly);
    
            var newsIdParameter = newsId.HasValue ?
                new ObjectParameter("NewsId", newsId) :
                new ObjectParameter("NewsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<News>("News_B", mergeOption, newsIdParameter);
        }
    
        public virtual ObjectResult<Category> Category_B(Nullable<int> categoryId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Category).Assembly);
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Category>("Category_B", categoryIdParameter);
        }
    
        public virtual ObjectResult<Category> Category_B(Nullable<int> categoryId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Category).Assembly);
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Category>("Category_B", mergeOption, categoryIdParameter);
        }
    
        public virtual ObjectResult<Subcategory> Subcategory_B(Nullable<int> subcategoryId, Nullable<int> categoryId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subcategory).Assembly);
    
            var subcategoryIdParameter = subcategoryId.HasValue ?
                new ObjectParameter("SubcategoryId", subcategoryId) :
                new ObjectParameter("SubcategoryId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subcategory>("Subcategory_B", subcategoryIdParameter, categoryIdParameter);
        }
    
        public virtual ObjectResult<Subcategory> Subcategory_B(Nullable<int> subcategoryId, Nullable<int> categoryId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Subcategory).Assembly);
    
            var subcategoryIdParameter = subcategoryId.HasValue ?
                new ObjectParameter("SubcategoryId", subcategoryId) :
                new ObjectParameter("SubcategoryId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Subcategory>("Subcategory_B", mergeOption, subcategoryIdParameter, categoryIdParameter);
        }
    
        public virtual int Subcategory_Image_I(Nullable<int> categoryId, Nullable<int> subcategoryId, Nullable<int> imageId, string name, string imageTitle, string imagePath)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var subcategoryIdParameter = subcategoryId.HasValue ?
                new ObjectParameter("SubcategoryId", subcategoryId) :
                new ObjectParameter("SubcategoryId", typeof(int));
    
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("ImageId", imageId) :
                new ObjectParameter("ImageId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageTitleParameter = imageTitle != null ?
                new ObjectParameter("ImageTitle", imageTitle) :
                new ObjectParameter("ImageTitle", typeof(string));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Subcategory_Image_I", categoryIdParameter, subcategoryIdParameter, imageIdParameter, nameParameter, imageTitleParameter, imagePathParameter);
        }
    
        public virtual ObjectResult<Team> Team_B(Nullable<int> teamId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Team).Assembly);
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Team>("Team_B", teamIdParameter);
        }
    
        public virtual ObjectResult<Team> Team_B(Nullable<int> teamId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Team).Assembly);
    
            var teamIdParameter = teamId.HasValue ?
                new ObjectParameter("TeamId", teamId) :
                new ObjectParameter("TeamId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Team>("Team_B", mergeOption, teamIdParameter);
        }
    
        public virtual ObjectResult<Image> Subcategory_Image_B(Nullable<int> subcategoryId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Image).Assembly);
    
            var subcategoryIdParameter = subcategoryId.HasValue ?
                new ObjectParameter("SubcategoryId", subcategoryId) :
                new ObjectParameter("SubcategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Image>("Subcategory_Image_B", subcategoryIdParameter);
        }
    
        public virtual ObjectResult<Image> Subcategory_Image_B(Nullable<int> subcategoryId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Image).Assembly);
    
            var subcategoryIdParameter = subcategoryId.HasValue ?
                new ObjectParameter("SubcategoryId", subcategoryId) :
                new ObjectParameter("SubcategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Image>("Subcategory_Image_B", mergeOption, subcategoryIdParameter);
        }
    
        public virtual ObjectResult<Certification> Certification_B(Nullable<int> certificationId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Certification).Assembly);
    
            var certificationIdParameter = certificationId.HasValue ?
                new ObjectParameter("CertificationId", certificationId) :
                new ObjectParameter("CertificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Certification>("Certification_B", certificationIdParameter);
        }
    
        public virtual ObjectResult<Certification> Certification_B(Nullable<int> certificationId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Certification).Assembly);
    
            var certificationIdParameter = certificationId.HasValue ?
                new ObjectParameter("CertificationId", certificationId) :
                new ObjectParameter("CertificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Certification>("Certification_B", mergeOption, certificationIdParameter);
        }
    
        public virtual ObjectResult<Client> Client_B(Nullable<int> clientId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Client).Assembly);
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client>("Client_B", clientIdParameter);
        }
    
        public virtual ObjectResult<Client> Client_B(Nullable<int> clientId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Client).Assembly);
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client>("Client_B", mergeOption, clientIdParameter);
        }
    
        public virtual ObjectResult<Pilot> Pilot_B(Nullable<int> pilotId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Pilot).Assembly);
    
            var pilotIdParameter = pilotId.HasValue ?
                new ObjectParameter("PilotId", pilotId) :
                new ObjectParameter("PilotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pilot>("Pilot_B", pilotIdParameter);
        }
    
        public virtual ObjectResult<Pilot> Pilot_B(Nullable<int> pilotId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Pilot).Assembly);
    
            var pilotIdParameter = pilotId.HasValue ?
                new ObjectParameter("PilotId", pilotId) :
                new ObjectParameter("PilotId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pilot>("Pilot_B", mergeOption, pilotIdParameter);
        }
    
        public virtual ObjectResult<Link> Link_B(Nullable<int> linkId, Nullable<int> linksCategoryId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Link).Assembly);
    
            var linkIdParameter = linkId.HasValue ?
                new ObjectParameter("LinkId", linkId) :
                new ObjectParameter("LinkId", typeof(int));
    
            var linksCategoryIdParameter = linksCategoryId.HasValue ?
                new ObjectParameter("LinksCategoryId", linksCategoryId) :
                new ObjectParameter("LinksCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Link>("Link_B", linkIdParameter, linksCategoryIdParameter);
        }
    
        public virtual ObjectResult<Link> Link_B(Nullable<int> linkId, Nullable<int> linksCategoryId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Link).Assembly);
    
            var linkIdParameter = linkId.HasValue ?
                new ObjectParameter("LinkId", linkId) :
                new ObjectParameter("LinkId", typeof(int));
    
            var linksCategoryIdParameter = linksCategoryId.HasValue ?
                new ObjectParameter("LinksCategoryId", linksCategoryId) :
                new ObjectParameter("LinksCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Link>("Link_B", mergeOption, linkIdParameter, linksCategoryIdParameter);
        }
    
        public virtual ObjectResult<LinksCategory> LinksCategory_B(Nullable<int> linksCategoryId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LinksCategory).Assembly);
    
            var linksCategoryIdParameter = linksCategoryId.HasValue ?
                new ObjectParameter("LinksCategoryId", linksCategoryId) :
                new ObjectParameter("LinksCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LinksCategory>("LinksCategory_B", linksCategoryIdParameter);
        }
    
        public virtual ObjectResult<LinksCategory> LinksCategory_B(Nullable<int> linksCategoryId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(LinksCategory).Assembly);
    
            var linksCategoryIdParameter = linksCategoryId.HasValue ?
                new ObjectParameter("LinksCategoryId", linksCategoryId) :
                new ObjectParameter("LinksCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LinksCategory>("LinksCategory_B", mergeOption, linksCategoryIdParameter);
        }
    
        public virtual int Subcategory_Image_D(Nullable<int> subcategoryId, Nullable<int> imageId)
        {
            var subcategoryIdParameter = subcategoryId.HasValue ?
                new ObjectParameter("SubcategoryId", subcategoryId) :
                new ObjectParameter("SubcategoryId", typeof(int));
    
            var imageIdParameter = imageId.HasValue ?
                new ObjectParameter("ImageId", imageId) :
                new ObjectParameter("ImageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Subcategory_Image_D", subcategoryIdParameter, imageIdParameter);
        }
    
        public virtual ObjectResult<Text> Texts_B(Nullable<int> textId, Nullable<int> languageId)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Text).Assembly);
    
            var textIdParameter = textId.HasValue ?
                new ObjectParameter("TextId", textId) :
                new ObjectParameter("TextId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Text>("Texts_B", textIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<Text> Texts_B(Nullable<int> textId, Nullable<int> languageId, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Text).Assembly);
    
            var textIdParameter = textId.HasValue ?
                new ObjectParameter("TextId", textId) :
                new ObjectParameter("TextId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Text>("Texts_B", mergeOption, textIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<Service> Service_B(Nullable<int> serviceId, Nullable<bool> isCompetition)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Service).Assembly);
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var isCompetitionParameter = isCompetition.HasValue ?
                new ObjectParameter("IsCompetition", isCompetition) :
                new ObjectParameter("IsCompetition", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Service>("Service_B", serviceIdParameter, isCompetitionParameter);
        }
    
        public virtual ObjectResult<Service> Service_B(Nullable<int> serviceId, Nullable<bool> isCompetition, MergeOption mergeOption)
        {
            ((IObjectContextAdapter)this).ObjectContext.MetadataWorkspace.LoadFromAssembly(typeof(Service).Assembly);
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var isCompetitionParameter = isCompetition.HasValue ?
                new ObjectParameter("IsCompetition", isCompetition) :
                new ObjectParameter("IsCompetition", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Service>("Service_B", mergeOption, serviceIdParameter, isCompetitionParameter);
        }
    }
}
