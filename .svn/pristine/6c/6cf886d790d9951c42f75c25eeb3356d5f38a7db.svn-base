using System;
using System.Collections.Generic;
using System.Data;
using System.Data.Entity;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using RusoCars.Models;

namespace RusoCars.Controllers
{
    [Authorize]
    public class TeamController : Controller
    {
        private CarsRusoEntities db = new CarsRusoEntities();

        //
        // GET: /Team/

        public ActionResult Index()
        {
            var team = db.Team_B(null);
            return View(team.ToList());
        }

        //
        // GET: /Team/Details/5

        public ActionResult Details(int id = 0)
        {
            Team team = db.Team_B(id).ToList<Team>().First();
            if (team == null)
            {
                return HttpNotFound();
            }
            return View(team);
        }

        //
        // GET: /Team/Create

        public ActionResult Create()
        {

            return View();
        }

        //
        // POST: /Team/Create

        [HttpPost]
        public ActionResult Create(Team team)
        {
            Random auxRandom = new Random();
            foreach (string fileName in Request.Files)
            {
                string random = auxRandom.Next(0, 99999999).ToString();
                HttpPostedFileBase file = Helpers.FileHelpers.UploadFile(Request.Files[fileName],
                                                                       Server.MapPath("~/Images"),
                                                                       random);

                if (file != null)
                {
                    int imageId = Helpers.FileHelpers.SaveImage(file, random);

                    if (ModelState.IsValid)
                    {
                        team.ImageId = imageId;
                        db.Teams.Add(team);
                        db.SaveChanges();
                        return RedirectToAction("Index");
                    }
                }
            }

            return View(team);
        }

        //
        // GET: /Team/Edit/5

        public ActionResult Edit(int id = 0)
        {
            Team team = db.Team_B(id).ToList<Team>().First();
            if (team == null)
            {
                return HttpNotFound();
            }
            return View(team);
        }

        //
        // POST: /Team/Edit/5

        [HttpPost]
        public ActionResult Edit(Team team)
        {
            Random auxRandom = new Random();
            foreach (string fileName in Request.Files)
            {
                string random = auxRandom.Next(0, 99999999).ToString();
                HttpPostedFileBase file = Helpers.FileHelpers.UploadFile(Request.Files[fileName],
                                                                         Server.MapPath("~/Images"),
                                                                         random);

                int imageId = Helpers.FileHelpers.SaveImage(file, random);

                Helpers.FileHelpers.RemoveFile(team.ImageId);

                if (ModelState.IsValid)
                {
                    team.ImageId = imageId;
                    db.Entry(team).State = EntityState.Modified;
                    db.SaveChanges();
                    return RedirectToAction("Index");
                }
            }
            return View(team);
        }

        //
        // GET: /Team/Delete/5

        public ActionResult Delete(int id = 0)
        {
            Team team = db.Team_B(id).ToList<Team>().First();
            if (team == null)
            {
                return HttpNotFound();
            }
            return View(team);
        }

        //
        // POST: /Team/Delete/5

        [HttpPost, ActionName("Delete")]
        public ActionResult DeleteConfirmed(int id)
        {
            Team team = db.Team_B(id).ToList<Team>().First();
            Image image = db.Image_B(team.ImageId).ToList<Image>().First();

            Helpers.FileHelpers.RemoveFile(team.ImageId);

            db.Teams.Remove(team);
            db.Images.Remove(image);
            db.SaveChanges();
            return RedirectToAction("Index");
        }

        protected override void Dispose(bool disposing)
        {
            db.Dispose();
            base.Dispose(disposing);
        }


    }
}